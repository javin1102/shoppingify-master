version: 2.1
orbs:
  node: circleci/node@5.0.0

jobs:
  build_react:
    docker:
      - image: "cimg/node:16.7"
    working_directory: ~/shoppingify-master/client
    steps:
      - checkout:
          path: ~/shoppingify-master
      - restore_cache:
          keys:
            - v1-dependencies-{{checksum "package.json"}}
            - v1-dependencies
      - run: npm install
      - run: npm install --prefix=$HOME/.local --global vercel
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{checksum "package.json"}}
      - run: npm run test
      - run:
          name: deployment setup
          when: on_success
          command: DEPLOY_STG="curl -x GET https://api.vercel.com/v1/integrations/deploy/prj_6tRcSTLdT6kNWaypZFRt4SUrSbZj/sflEm0X0QG"
      - run: bash -c "$DEPLOY_STG"

  build_laravel:
    working_directory: ~/shoppingify-master/server
    environment:
      BASH_ENV: ~/.bashrc
    docker:
      - image: circleci/php:8
        environment:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_DATABASE: server
          DB_USERNAME: root
          DB_PASSWORD: root
          SESSION_DRIVER: database
          CACHE_DRIVER: file
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: root

    steps:
      - checkout:
          path: ~/shoppingify-master/

      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libmcrypt-dev libsqlite3-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev zlib1g-dev
      - run:
          name: Install PHP Extensions
          command: |
            sudo docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
            sudo docker-php-ext-install -j$(nproc) iconv gd zip pdo_mysql pdo_sqlite
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            sudo apt install -y mariadb-client

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-

      - run:
          name: Install Composer Dependencies
          command: composer install -n --ignore-platform-reqs

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: config mysql
          command: mysqladmin create test --host="127.0.0.1" --user="root" --password="root"
      - run:
          name: Populate .env
          command: cp .env.example .env && php artisan key:generate
      - run:
          name: Migrate Database
          command: |
            php artisan config:clear
            php artisan migrate --env=example --force
      - run:
          name: Run Unit Tests
          environment:
            DB_CONNECTION: sqlite-memory
          command: |
            mkdir -p ./logs/phpunit
            vendor/bin/phpunit -d memory_limit=512M --log-junit logs/phpunit/junit.xml --testdox-html logs/phpunit/testdox.html

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_laravel
      - build_react
